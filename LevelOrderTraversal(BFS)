import java.util.*;

class Node {
    int data;
    Node left;
    Node right;
    
    Node(int d) {
        data = d;
        left = right = null;
    }
}

// Queue is First in First Out;
// .poll() -> To take out the data which was added at first in queue;
public class MyClass {
    private static List<List<Integer>> levelOrder(Node root, List<List<Integer>> ans) {
        Queue<Node> q = new LinkedList();
        // q.offer(root);  offer as well as add is used to add a node in queue;
        q.add(root);
        
        while(q.isEmpty()==false) {
            int currLen = q.size();
            List<Integer> list = new ArrayList();
            
            for(int i=0; i<currLen; i++) {
                Node curr = q.poll();
                list.add(curr.data);
                
                if(curr.left!=null) {
                    q.add(curr.left);
                }
                if(curr.right!=null) {
                    q.add(curr.right);
                }
            }
            ans.add(list);
        }
        return ans;
    }
    
    public static void main(String args[]) {
        Node root = new Node(1);
        root.left = new Node(2);
        root.right = new Node(3);
        root.left.left = new Node(4);
        root.left.right = new Node(5);
        root.right.left = new Node(6);
        root.right.right = new Node(7);
        
        List<List<Integer>> ans = new ArrayList();
        levelOrder(root,ans);
        System.out.println(ans);
    }
}
